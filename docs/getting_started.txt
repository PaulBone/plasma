Getting started with Plasma
===========================
:Author: Gert Meulyzer
:Email: gert@plasmalang.org
:Date: Feburary, 2020
:Revision: 0.1
:Copyright: Copyright (C) 2019-2020, Plasma Team
:License: CC BY-SA 4.0
:toc:

Since we don’t have static builds yet, you’ll need to build Plasma from source.
This file contains some instructions on setting up the prerequisites and
buidling Plasma.

Mercury
-------

You’ll need another language, Mercury, since our compiler is written in it.
Version 14.01.1 or newer is required but an ROTD version is recommended
since the stable release is quite old and may be less compatible with newer
C compilers.  An ROTD version is required for musl-based systems.

Compiling Mercury from source can take a long time,
but if you’re on Debian, Ubuntu or other derivative running on x86_64
then there are some packages!
Read on or follow the instructions at https://dl.mercurylang.org/deb/

=== For Ubuntu 18.04, this is what you need to do:

You’ll need a basic C and C++ build environment. That can be installed with
the build-essential:

[source,bash]
----
sudo apt install build-essential
----

Next install the repo where you can find the packages, They’re signed with
Paul’s gpg key, so you’ll need to tell apt to trust things signed by it:

[source,bash]
----
cd /tmp
wget https://paul.bone.id.au/paul.asc
sudo apt-key add paul.asc
----

Create a new file in /etc/apt/sources.list.d, name it mercury.list and paste
in it:

  deb http://dl.mercurylang.org/deb/ stretch main
  deb-src http://dl.mercurylang.org/deb/ stretch main

.Now we can install:
[source,bash]
----
sudo apt update
sudo apt install mercury-rotd-recommended
----

If all goes well you now have a working version of Mercury on your computer.

Asciidoc
--------

To optionally build the documentation, you want to install AsciiDoc:

[source,bash]
----
sudo apt install asciidoc
----

Beware, this is a very large installation, on a default Ubuntu installation
this amounts to over 1 GB of space and a download of over 300MB.  If
AsciiDoc is not installed, documentation will not be built.

Docker
------

If you want to run Plasma in a Docker container, the Dockerfile 
provided in link:scripts/docker[scripts/docker] is available,
It is also build and available on
https://hub.docker.com/r/paulbone/plasma-dep[docker hub].

Plasma
------

Now it’s time to clone the plasma repo:

[source,bash]
----
git clone https://github.com/PlasmaLang/plasma.git
----
If you want or need to, you can configure Plasma's build settings by editing
the `Makefile`.
The `Makefile` itself contains documentation that explains the build
options.  These include which C compiler to use, and compilation flags.
The default build is reasonable if you have `gcc`.

Then run `make` and it will build you the plasma compiler (`src/plzc`)
and the runtime (`runtime/plzrun`)

The `make test` command will execute the test suite.
Be sure to take a look at the example programs in 
https://github.com/PlasmaLang/plasma/tree/master/examples[`examples/`].

Getting help
------------

If you're stuck and  the https://plasmalang.org/docs/[Documentation] doesn't
contain the answer or clue you need or you're struggling to find it.  Please
ask for help.
The https://plasmalang.org/contact.html[Contact] page of the website lists
all the ways you can get in touch.
In particular the
https://plasmalang.org/lists/listinfo/help[Plasma Help mailing list]
and
https://plasmalang.org/contact.html#irc[IRC channel] are the best
resources for help.

For bugs or missing information please
https://github.com/PlasmaLang/plasma/issues/new[file a bug].

vim
---

If you want to write some Plasma programs and you use vim.  You may wish to
use the
https://github.com/PlasmaLang/vim[vim editor support].

// vim: set syntax=asciidoc:
