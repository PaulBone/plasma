// Structs example

// This is free and unencumbered software released into the public domain.
// See ../LICENSE.unlicense

module struct_;

data hello_string = string { 72 101 108 108 111 10 };

struct test_struct { ptr w16 w16 w };

// Test that a data item can create a struct.
data test_data = test_struct { hello_string 3 9 27 };

import Builtin.print (ptr - );
import Builtin.int_to_string (w - ptr);
import Builtin.string_concat (ptr ptr - ptr);

proc main_p (- w) {
    get_env load main_s 1:ptr drop
    load test_struct 1 :ptr swap
    call Builtin.print
    load test_struct 2 :w16 swap
    ze:w16:w call print_int
    load test_struct 3 :w16 swap
    ze:w16:w call print_int
    load test_struct 4 :w drop
    call print_int

    0 ret
};

data nl = string { 10 0 };

proc print_int(w -) {
    call Builtin.int_to_string
    get_env load main_s 2:ptr drop
    call Builtin.string_concat call Builtin.print
    ret
};

struct main_s { ptr ptr };
data main_d = main_s { test_data nl };
export
closure main = main_p main_d;
entry main;
