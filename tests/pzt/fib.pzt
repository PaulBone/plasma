// This is free and unencumbered software released into the public domain.
// See ../LICENSE.unlicense

module fib;

import Builtin.print (ptr - );
import Builtin.int_to_string (w - ptr);

proc print_int (w -) {
    call Builtin.int_to_string
    call Builtin.print
    ret
};

proc fibs (w - w) {
    block entry_ {
        // if the input is less than two jump to the base case
        dup 2 lt_u cjmp base
        // Otherwise execute the recursive calls, and add their results.
        dup
        1 sub call fibs swap 2 sub call fibs
        add
        ret
    }
    block base {
        drop
        1
        ret
    }
};

proc main_p ( - w) {
    get_env
        load main_s 3:ptr
        load main_s 2:ptr
        load main_s 1:ptr
    drop

    // consume label1
    call Builtin.print
    35 call print_int
    // Consume label2
    call Builtin.print
    35 call fibs
    call Builtin.int_to_string
    call Builtin.print
    // Consome nl
    call Builtin.print
    0 ret
};

data nl = array(w8) { 10 0 };
data label1 = array(w8) { 102 105 98 115 40 0 };
data label2 = array(w8) { 41 32 61 32 0 };

struct main_s { ptr ptr ptr };
data main_d = main_s { label1 label2 nl };
export closure main = main_p main_d;
entry main;

